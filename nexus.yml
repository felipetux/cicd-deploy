apiVersion: v1
kind: Template
labels:
  template: nexus3-persistent-template
metadata:
  name: nexus3-persistent
  annotations:
    description: Sonatype Nexus 3 persistent template
    tags: ci,nexus
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: nexus
    name: nexus
  spec:
    tags:
    - from:
        kind: DockerImage
        name: sonatype/nexus3:${NEXUS_VERSION}
      name: ${NEXUS_VERSION}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: nexus
    name: nexus
  spec:
    replicas: 1
    selector:
      deploymentconfig: nexus
    strategy:
      recreateParams:
        timeoutSeconds: 1200
        post:
          failurePolicy: Abort
          execNewPod:
            containerName: nexus
            command:
              - "/bin/bash"
              - "-c"
              - "curl -o /tmp/nexus-functions -s http://https://raw.githubusercontent.com/felipetux/cicd-deploy/master/nexus_functions; source /tmp/nexus-functions; add_nexus3_redhat_repos admin admin123 http://${SERVICE_NAME}:8081"
      type: Recreate
    template:
      metadata:
        labels:
          deploymentconfig: nexus
      spec:
        containers:
        - env:
          - name: CONTEXT_PATH
            value: /
          image: ' '
          imagePullPolicy: IfNotPresent
          name: nexus
          ports:
            - containerPort: 8081
              protocol: TCP
          resources:
            limits:
              memory: ${MAX_MEMORY}
              cpu: 1
            requests:
              memory: 3Gi
              cpu: 200m
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /nexus-data
              name: nexus-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: nexus-data
          persistentVolumeClaim:
            claimName: nexus-pv
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - nexus
        from:
          kind: ImageStreamTag
          name: nexus:${NEXUS_VERSION}
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: nexus
    name: nexus
  spec:
    ports:
    - name: 8081-tcp
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      deploymentconfig: nexus
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: nexus
    name: nexus
  spec:
    port:
      targetPort: 8081-tcp
    to:
      kind: Service
      name: nexus
      weight: 100
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: nexus
    name: nexus-pv
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}
parameters:
- displayName: Sonatype Nexus service name
  name: SERVICE_NAME
  required: true
  value: nexus
- displayName: Sonatype Nexus version
  name: NEXUS_VERSION
  required: true
  value: 3.16.0
- description: Volume space available for Sonatype Nexus e.g. 512Mi, 2Gi
  displayName: Volume Space for Nexus
  name: VOLUME_CAPACITY
  required: true
  value: 6Gi
- description: Max memory allocated to the Nexus pod
  displayName: Max Memory
  name: MAX_MEMORY
  required: true
  value: 4Gi
